version: 2.1

commands:
  restore_dependency_cache:
    description: "Restores mix dependency cache"
    parameters:
      none:
        type: string
    steps:
      - restore_cache:
        keys:
          - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          - v1-mix-cache-{{ .Branch }}
          - v1-mix-cache
  restore_build_cache:
    description: "Restores build cache"
    parameters:
      none:
        type: string
    steps:
      - restore_cache:
        keys:
          - v1-build-cache-{{ .Branch }}
          - v1-build-cache
  save_dependency_cache:
    description: "Saves dependency cache"
    parameters:
      path:
        default: "deps"
        type: string
    steps:
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: << parameters.path >>
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: << parameters.path >>
      - save_cache:
          key: v1-mix-cache
          paths: << parameters.path >>
  save_build_cache:
    description: "Saves build cache"
    parameters:
      path:
        default: "_build"
        type: string
    steps:
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: << parameters.path >>
      - save_cache:
          key: v1-build-cache
          paths: << parameters.path >>


jobs:
  build:
    parallelism: 1
    docker:
      - image: elixir:1.9
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.1-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: poker_ex_test
          POSTGRES_PASSWORD: $POSTGRES_PASS

    working_directory: ~/app

    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - restore_dependency_cache
      - restore_build_cache
      - run: mix do deps.get, compile
      - save_dependency_cache
      - save_build_cache

  test:
    parallelism: 1
    docker:
      - image: elixir:1.9
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.1-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: poker_ex_test
          POSTGRES_PASSWORD: $POSTGRES_PASS

    working_directory: ~/app

    steps:
      - checkout
      - restore_dependency_cache
      - restore_build_cache
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: mix test --trace
      - store_test_results:
          path: _build/test/lib/results

  format:
    parallelism: 1
    docker:
      - image: elixir:1.9
    working_directory: ~/app

    steps:
      - checkout
      - restore_dependency_cache
      - restore_build_cache
      - run: mix format

  lint:
    parallelism: 1
    docker:
      - image: elixir:1.9
    working_directory: ~/app

    steps:
      - checkout
      - restore_dependency_cache
      - restore_build_cache
      - run: mix credo --only warning

  push_docker_image:
    parallelism: 1
    docker:
      - image: elixir:1.9
    working_directory: ~/app

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t zkayser/poker_ex:$CIRCLE_BUILD_NUM .
      - run: docker push zkayser/poker_ex:$CIRCLE_BUILD_NUM

workflows:
  version: 2
  build_test_docker_push:
    jobs:
      - build
      - test:
          requires:
            - build
      - format:
          requires:
            - build
      - lint:
          requires:
            - build
      - push_docker_image:
          requires:
            - test
            - format
            - lint